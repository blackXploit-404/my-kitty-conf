#my personal kitty conf file
# Save this as ~/.config/kitty/kitty.conf
# ==========================
# modify as you want 
# Author : Surajit Sen <sensurajit@proton.me>
# BACKGROUND_OPACITY: 0.0 = fully transparent, 1.0 = fully opaque
background_opacity 0.88

# FONT & APPEARANCE
font_family      FiraCode Nerd Font, Fira Code, Hack Nerd Font, DejaVu Sans Mono
bold_font        auto
italic_font      auto
# use ligatures for nice programming typography
enable_ligatures yes
font_size 12.0

# WINDOW / TABS / TITLE
window_title_format {title} â€” {hostname}
active_window_title_format {title}
# decorate window with 2px rounded corners (visual on supported platforms)
window_padding_width 6
window_corner_radius 6

# TAB BAR (visible and compact)\t
show_tab_bar always
tab_bar_style powerline
# set colors for tab bar using green highlight
tab_bar_background #000000
active_tab_background #003300
inactive_tab_background #001100
active_tab_foreground #00FF66
inactive_tab_foreground #007744

# CURSOR
cursor_shape block
cursor_blinking true
cursor_beam_thickness 2

# MOUSE / SELECTION / CLIPBOARD
mouse_reporting yes
# so selection automatically copies to primary clipboard on X11
selection_to_clipboard yes
clipboard_control write_primary_and_clipboard
map ctrl+shift+c copy_to_clipboard
map ctrl+shift+v paste_from_clipboard
map ctrl+shift+u paste_from_clipboard --type=string --encoding=utf8

# SCROLLBACK & HISTORY
scrollback_lines 200000
# smooth scrolling when using wheel/keys
smooth_scrolling yes
history_save_interval 300

# PERFORMANCE
# adjust GPU work & Vsync for smoother rendering during heavy output
gpu_memory 512
vsync yes

# BACKGROUND / TRANSPARENCY / BLUR (blur only supported on Wayland via compositor)
# if you want *full* transparency set background_opacity 0.0
# kitty uses terminal background_opacity rather than compositing; real fullscreen transparency must be supported by compositor
background #000000
foreground #00FF66
# ANSI COLORS: make text green + hacker-ish palette
color0  #000000
color1  #ff5555
color2  #50fa7b
color3  #f1fa8c
color4  #8be9fd
color5  #bd93f9
color6  #8be9fd
color7  #bfbfbf
color8  #4d4d4d
color9  #ff6e6e
color10 #2ee78a
color11 #ffd86b
color12 #89ddff
color13 #caa3ff
color14 #70f0d8
color15 #e6e6e6

# specifically force green-like prompt/foreground variants
foreground #00ff66
cursor #00ff66
selection_foreground #001100
selection_background #00aa33

# BACKGROUND IMAGE (optional) - uncomment and set a path to use
background_image ~/.config/kitty/backgrounds/terminal-bg.png
background_image_alignment center
background_image_scale cover

# WINDOW BEHAVIOR
# start maximized on launch (remove if you prefer floating sized window)
startup_window_maximized yes

# KITTEN SCRIPTS / LAUNCHERS (use builtin kittens for quick hacks)
# open images inline with icat: kitten icat <file>
map ctrl+shift+i kitten icat --silent
# open an editable scratch new tab with nvim (requires nvim in PATH)
map ctrl+shift+n new_tab nvim
map ctrl+shift+t new_tab
map ctrl+shift+w close_tab
map ctrl+shift+f toggle_fullscreen

# REMOTE CONTROL (allow external control via kitty @unix:/path)
# to use: kitty @ --to=unix:/tmp/kitty-sock new-window
allow_remote_control yes
remote_control_socket /tmp/kitty-remote.sock

# LAUNCHER / QUICK COMMANDS
# quick shell command popup
map ctrl+shift+p launch --type=overlay --title "Run command" --cwd=current -- bash -lc "read -p 'CMD> ' cmd; eval \"$cmd\""

# KEYBINDINGS - developer/hacker-focused
# split panes horizontally/vertically
map ctrl+shift+e launch --no-response -- keep_focus --cwd=current kitty @ split-window --type=vertical
map ctrl+shift+\ launch --no-response -- keep_focus --cwd=current kitty @ split-window --type=horizontal
# move between windows using alt+hjkl
map alt+h focus_window left
map alt+l focus_window right
map alt+k focus_window up
map alt+j focus_window down
# resize with alt+shift+hjkl
map alt+shift+h resize_window -10 0
map alt+shift+l resize_window +10 0
map alt+shift+k resize_window 0 -5
map alt+shift+j resize_window 0 +5

# SPEEDY SEARCH & OPEN URL
# select a line and press ctrl+shift+o to open URL under cursor
map ctrl+shift+o open --url
# highlight word under cursor into shell (useful with tmux)
map ctrl+shift+sl send_text all "$(xsel -o 2>/dev/null || echo)"

# KITTIES FOR DEV WORK
# keyboard-driven image display
map ctrl+shift+g kitten icat --silent
# inline git diff viewer (requires delta installed): new tab with git status
map ctrl+shift+d new_tab bash -lc "git --no-pager diff | delta || git --no-pager diff"

# OSC sequences: allow programs to set window title and icon
allow_remote_control yes
use_kitty_terminal_features yes

# OSC 52 clipboard passthrough (useful over ssh)
enable_osx_clipboard yes

# SHELL INTEGRATION (recommended: source kitty shell integration for enhanced features)
# echo "source \"/usr/share/kitty/kitty.conf\"" >> ~/.config/kitty/kitty.conf

# STATUS / PROMPT HACKS (emit escape sequences for status)
# Example: prompt that sets the tab title (in your shell PS1):
# PS1="\[\e]2;my-shell:\w\a\]$PS1"

# SAFETY & UX
# disable audible bell, but enable visual notification
bell none
visual_bell on

# MISC
# automatically reopen last working directory for new windows
remember_window_size yes
remember_window_position yes

# end of config
